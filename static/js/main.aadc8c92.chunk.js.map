{"version":3,"sources":["Navbar.js","useFetch.js","BlogDetails.js","BlogList.js","Home.js","Create.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","href","useFetch","url","useState","ispending","setispending","error","seterror","data","setdata","useEffect","abortCont","AbortController","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","BlogDetails","id","useParams","blog","isPending","history","useHistory","title","author","body","style","position","paddingTop","onClick","method","push","BlogList","props","blogs","map","to","textDecoration","padding","slice","Home","Create","setTitle","setBody","setAuthor","onSubmit","e","preventDefault","headers","JSON","stringify","type","required","value","onChange","target","disabled","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aadc8c92.chunk.js","sourcesContent":["// import  {Link, link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className = \"navbar\">\r\n            <h1> All blog</h1>\r\n            <div className=\"links\">\r\n                <a href=\"/\">Home</a>\r\n                <a href=\"/create\">New Blog</a>\r\n\r\n            </div>\r\n        </nav>   \r\n     );\r\n}\r\n \r\nexport default Navbar;\r\n//sfc stateless constant function","import { useState, useEffect } from 'react';\r\n\r\nconst useFetch= (url)=>{\r\n\r\n    const [ispending, setispending] = useState(true);\r\n    const [error, seterror] = useState(null);\r\n    const [data, setdata] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        const abortCont = new AbortController();\r\n\r\n        fetch(url, { signal: abortCont.signal })\r\n        .then(res=>{\r\n            if(!res.ok)\r\n            {\r\n                throw Error('Could not fetch data :(' );\r\n            }\r\n            return res.json();\r\n        })\r\n        .then(data=>{\r\n            setdata(data);\r\n            setispending(false);\r\n            seterror(null);\r\n        })\r\n        .catch(err=>{\r\n            if(err.name === 'AbortError')\r\n            {\r\n                console.log('fetchedAbort');\r\n            }\r\n            setispending(false);\r\n            seterror(err.message);\r\n        })\r\n\r\n        return ()  => abortCont.abort();\r\n    },[url]);\r\n\r\n    return {ispending, error, data}\r\n}\r\n\r\nexport default useFetch;","import { useHistory, useParams } from \"react-router\";\r\nimport useFetch from \"./useFetch\";\r\n\r\n\r\nconst BlogDetails = () => {\r\n    const {id} = useParams();\r\n    const {data: blog, error, isPending } = useFetch('https://my-json-server.typicode.com/teach-me-tech/blog/db'+id);\r\n    const history = useHistory();\r\n    const handleClick = () =>{\r\n        fetch('https://my-json-server.typicode.com/teach-me-tech/blog/db' + blog.id,{\r\n            method: 'DELETE'\r\n        }).then(()=>{\r\n            history.push('/');\r\n        })\r\n    }\r\n    \r\n    return ( \r\n        <div className=\"blog-details\">\r\n            {isPending && <div>Loading</div>}\r\n            {\r\n                error&&<div>{error}</div>\r\n            }\r\n            {blog && (\r\n                <>\r\n                <article>\r\n                    <h2>{blog.title}</h2>\r\n                    <p>Written by {blog.author}</p>\r\n                    <div>{blog.body}</div>\r\n                </article>\r\n                <div style={{position: \"absolute\", paddingTop: \"10px \"}}>\r\n                <button onClick={handleClick}>DELETE</button>\r\n                </div>\r\n                \r\n                </>\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\";\r\nimport BlogDetails from \"./BlogDetails\";\r\n\r\nconst BlogList = (props) => {\r\n    // console.log(props.blogs)\r\n    const title = props.title;\r\n    return ( \r\n        \r\n        <div className BlogList>\r\n            <h1 >{title}</h1>\r\n            {props.blogs.map((blog)=>(\r\n                <div className=\"blog-preview\" key={blog.id} >\r\n                    <Link to={`/blogs/${blog.id}`} style={{textDecoration: 'none'}}><h2>{blog.title}</h2>\r\n                    <div className=\"body\" style={{padding: \"10px\"}}>{blog.body.slice(0,100)}..</div>\r\n                        <p>Written by: {blog.author}</p>\r\n                        {/* <button onClick={() => props.handleDelete(blog.id)}>delete blog</button> */}\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogList;","// import { useState, useEffect } from 'react';\r\nimport useFetch from './useFetch';\r\nimport BlogList from './BlogList';\r\n\r\n\r\nconst Home = () => {\r\n    \r\n    // const handleDelete=(id)=>{\r\n    //     const newBlogs = blogs.filter(blog => blog.id !== id);\r\n    //     setblogs(newBlogs);\r\n    // }\r\n    \r\n    const {ispending, error, data:blogs} = useFetch(\"https://my-json-server.typicode.com/teach-me-tech/blog/db\")\r\n     return ( \r\n         <div className=\"home\">\r\n            {error && <div>{error}</div>}\r\n             {ispending && <h1>LOADING..</h1>}\r\n            {blogs && <BlogList blogs= {blogs} title= 'All Blogs!'/>}\r\n            {/* <BlogList blogs= {blogs.filter((blog)=>(blog.author==='mario'))} title= 'Mario`s blog!'/> */}\r\n         </div>\r\n     );\r\n}\r\n \r\nexport default Home;\r\n\r\n\r\n\r\n// let name = 'mario';\r\n    // const [name, setname] = useState('mario');\r\n    // const handleClick =()=>\r\n    // {\r\n    //     setname('shivam');\r\n    // }\r\n\r\n // useEffect(()=>{ })fires at each dom render\r\n    // useEffect(()=>{ }, [dependencies comes here])// now it will run only after render with given dependencies.","import { useState } from \"react\";\r\nimport {useHistory} from 'react-router-dom';\r\nconst Create = () => {\r\n    const [title, setTitle] = useState('');\r\n    const [body, setBody] = useState('');\r\n    const [author, setAuthor] = useState('');\r\n    const [ispending, setispending] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const blog = {title, body, author};\r\n\r\n        setispending(true);\r\n        fetch('http://localhost:8000/blogs', {\r\n            method: 'POST',\r\n            headers: {\"Content-type\": \"application/json\"},\r\n            body: JSON.stringify(blog)\r\n        }).then(()=>{\r\n            console.log(\"new\")\r\n            setispending(false)\r\n            // history.go(-1);\r\n            history.push('/')\r\n        })\r\n        \r\n    }\r\n    return ( \r\n        <div className=\"create\">\r\n            <h2>Add new content</h2>\r\n            <form onSubmit = {handleSubmit}>\r\n                <label>Blog Title: </label>\r\n                <input\r\n                 type=\"text\" required\r\n                 value={title}\r\n                 onChange={(e)=>setTitle(e.target.value)}\r\n                 />\r\n\r\n                <label> Blog body:</label>\r\n                <textarea required\r\n                    value={body}\r\n                    onChange={(e)=>setBody(e.target.value)}\r\n                ></textarea>\r\n\r\n                <label>Blog Author</label>\r\n                <textarea required\r\n                    value={author}\r\n                    onChange={(e)=>setAuthor(e.target.value)}\r\n                ></textarea>\r\n                {!ispending && <button>Add Blog</button>}\r\n                {ispending && <button disabled>Adding Blog ...</button>}\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <div className= 'not-found'>\r\n            <h2>NOT FOUND</h2>\r\n            <p>The page you are searching is not found!!</p>\r\n            <Link to=\"/\">Back to Homepage..</Link>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NotFound;","\nimport Navbar from './Navbar';\nimport Home from './Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Create from './Create'\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  // const title = \" Welcom to new blog!\"; for dynamic value\n  //dynamic value doesnt take bollean or object\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar/>\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Home/>\n              </Route>\n              <Route exact path=\"/create\">\n                <Create/>\n              </Route>\n              <Route exact path=\"/blogs/:id\">\n                <BlogDetails/>  \n              </Route>\n              <Route path=\"*\">\n                <NotFound/>\n              </Route>\n            </Switch>\n            \n          </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}